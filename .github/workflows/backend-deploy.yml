name: EC2 서버 배포
on:
  push:
    branches:
      - 'main'
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'
jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Backend 코드만 체크아웃
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            backend
          sparse-checkout-cone-mode: false
          
      - name: JDK 21 설정
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          
      - name: Gradle 캐시 설정
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: 애플리케이션 설정 주입
        uses: microsoft/variable-substitution@v1
        with:
          files: src/main/resources/application-prod.yml
        env:
          spring.datasource.url: ${{ secrets.DB_URL }}
          spring.datasource.username: ${{ secrets.DB_USERNAME }}
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}
          spring.mail.username: ${{ secrets.MAIL_USERNAME }}
          spring.mail.password: ${{ secrets.MAIL_PASSWORD }}
          app.mail.username: ${{ secrets.APP_MAIL_USERNAME }}
            
      - name: Gradle 빌드
        run: |
          chmod +x ./gradlew
          ./gradlew clean build --build-cache
          
      - name: EC2로 파일 전송
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          source: "build/libs/*.jar,Dockerfile,docker-compose.yml"
          target: "/home/ubuntu/app"
          strip_components: 1
          
      - name: 도커 컨테이너 실행
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script_stop: true
          script: |
            cd ~/app
            mv *.jar app.jar
            docker-compose down || true
            docker-compose up --build -d
  
